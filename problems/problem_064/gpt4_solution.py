import json
import time

# START - CODE GENERATED BY gpt4
def solution():
    def continued_fraction_period(n):
        m, d, a0 = 0, 1, int(n**0.5)
        if a0 * a0 == n:
            return 0  # Perfect square, no period
        a = a0
        period = 0
        while a != 2 * a0:
            m = d * a - m
            d = (n - m * m) // d
            a = (a0 + m) // d
            period += 1
        return period

    count_odd_periods = 0
    for n in range(2, 10001):
        if continued_fraction_period(n) % 2 == 1:
            count_odd_periods += 1

    return count_odd_periods
# END - CODE GENERATED BY gpt4

cpu_s, wall_s = time.process_time(), time.time()
result = solution()
cpu_e, wall_e = time.process_time(), time.time()

cpu_time, wall_time = cpu_e - cpu_s, wall_e - wall_s
print(json.dumps({"solution": result, "cpu": cpu_time, "wall": wall_time}))
