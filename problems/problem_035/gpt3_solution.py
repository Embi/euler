import json
import time

# START - CODE GENERATED BY gpt3
def solution():
    def is_prime(n):
        if n < 2:
            return False
        for i in range(2, int(n**0.5)+1):
            if n % i == 0:
                return False
        return True

    def rotations(n):
        n_str = str(n)
        return [int(n_str[i:] + n_str[:i]) for i in range(len(n_str))]

    count = 0
    for i in range(2, 1000000):
        if all(is_prime(r) for r in rotations(i)):
            count += 1
    return count
# END - CODE GENERATED BY gpt3

cpu_s, wall_s = time.process_time(), time.time()
result = solution()
cpu_e, wall_e = time.process_time(), time.time()

cpu_time, wall_time = cpu_e - cpu_s, wall_e - wall_s
print(json.dumps({"solution": result, "cpu": cpu_time, "wall": wall_time}))
