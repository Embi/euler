import json
import time

# START - CODE GENERATED BY gpt4
def solution():
    def is_prime(n):
        if n <= 1:
            return False
        if n <= 3:
            return True
        if n % 2 == 0 or n % 3 == 0:
            return False
        i = 5
        while i * i <= n:
            if n % i == 0 or n % (i + 2) == 0:
                return False
            i += 6
        return True

    def rotations(n):
        s = str(n)
        return [int(s[i:] + s[:i]) for i in range(len(s))]

    def is_circular_prime(n):
        for rot in rotations(n):
            if not is_prime(rot):
                return False
        return True

    count = 0
    for i in range(2, 1000000):
        if is_circular_prime(i):
            count += 1

    return count
# END - CODE GENERATED BY gpt4

cpu_s, wall_s = time.process_time(), time.time()
result = solution()
cpu_e, wall_e = time.process_time(), time.time()

cpu_time, wall_time = cpu_e - cpu_s, wall_e - wall_s
print(json.dumps({"solution": result, "cpu": cpu_time, "wall": wall_time}))
