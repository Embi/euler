import json
import time

# START - CODE GENERATED BY gpt4
def solution():
    def is_prime(n):
        if n <= 1:
            return False
        if n <= 3:
            return True
        if n % 2 == 0 or n % 3 == 0:
            return False
        i = 5
        while i * i <= n:
            if n % i == 0 or n % (i + 2) == 0:
                return False
            i += 6
        return True

    def is_truncatable_prime(n):
        if n < 10:
            return False
        str_n = str(n)
        for i in range(len(str_n)):
            if not is_prime(int(str_n[i:])) or not is_prime(int(str_n[:i+1])):
                return False
        return True

    truncatable_primes = []
    num = 11  # Start checking from the first two-digit number
    while len(truncatable_primes) < 11:
        if is_truncatable_prime(num):
            truncatable_primes.append(num)
        num += 2  # Increment by 2 to skip even numbers

    return sum(truncatable_primes)

# END - CODE GENERATED BY gpt4

cpu_s, wall_s = time.process_time(), time.time()
result = solution()
cpu_e, wall_e = time.process_time(), time.time()

cpu_time, wall_time = cpu_e - cpu_s, wall_e - wall_s
print(json.dumps({"solution": result, "cpu": cpu_time, "wall": wall_time}))
