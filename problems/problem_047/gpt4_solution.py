import json
import time

# START - CODE GENERATED BY gpt4
def prime_factors_count(n):
    count = 0
    factor = 2
    while n % factor == 0:
        n //= factor
        count += 1
    factor = 3
    while factor * factor <= n:
        while n % factor == 0:
            n //= factor
            count += 1
        factor += 2
    if n > 1:
        count += 1
    return count

def solution():
    consecutive_count = 0
    number = 2 * 3 * 5 * 7  # Start from the first number with 4 distinct prime factors
    while True:
        if prime_factors_count(number) == 4:
            consecutive_count += 1
            if consecutive_count == 4:
                return number - 3
        else:
            consecutive_count = 0
        number += 1
# END - CODE GENERATED BY gpt4

cpu_s, wall_s = time.process_time(), time.time()
result = solution()
cpu_e, wall_e = time.process_time(), time.time()

cpu_time, wall_time = cpu_e - cpu_s, wall_e - wall_s
print(json.dumps({"solution": result, "cpu": cpu_time, "wall": wall_time}))
