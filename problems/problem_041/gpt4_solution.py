import json
import time

# START - CODE GENERATED BY gpt4
def is_prime(num):
    if num <= 1:
        return False
    if num <= 3:
        return True
    if num % 2 == 0 or num % 3 == 0:
        return False
    i = 5
    while i * i <= num:
        if num % i == 0 or num % (i + 2) == 0:
            return False
        i += 6
    return True

def generate_pandigital_numbers(n):
    from itertools import permutations
    digits = ''.join(str(i) for i in range(1, n + 1))
    for perm in permutations(digits):
        yield int(''.join(perm))

def solution():
    # Check pandigital numbers from largest n to smallest
    for n in range(9, 0, -1):
        # Generate pandigital numbers in descending order
        pandigitals = sorted(generate_pandigital_numbers(n), reverse=True)
        for number in pandigitals:
            if is_prime(number):
                return number

# END - CODE GENERATED BY gpt4

cpu_s, wall_s = time.process_time(), time.time()
result = solution()
cpu_e, wall_e = time.process_time(), time.time()

cpu_time, wall_time = cpu_e - cpu_s, wall_e - wall_s
print(json.dumps({"solution": result, "cpu": cpu_time, "wall": wall_time}))
