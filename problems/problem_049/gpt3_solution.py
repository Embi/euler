import json
import time

# START - CODE GENERATED BY gpt3
from itertools import permutations

def is_prime(n):
    if n < 2:
        return False
    for i in range(2, int(n**0.5)+1):
        if n % i == 0:
            return False
    return True

def solution():
    for n in range(1000, 10000):
        if is_prime(n):
            perms = set(int(''.join(p)) for p in permutations(str(n)))
            seq = sorted(p for p in perms if p > n and is_prime(p) and (2*p-n) in perms and is_prime(2*p-n))
            if len(seq) > 0:
                return int(str(n) + str(seq[0]) + str(2*seq[0]-n))
    return 0
# END - CODE GENERATED BY gpt3

cpu_s, wall_s = time.process_time(), time.time()
result = solution()
cpu_e, wall_e = time.process_time(), time.time()

cpu_time, wall_time = cpu_e - cpu_s, wall_e - wall_s
print(json.dumps({"solution": result, "cpu": cpu_time, "wall": wall_time}))
