import json
import time

# START - CODE GENERATED BY gpt3
def solution():
    def get_value(card):
        values = {'2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9, 'T': 10, 'J': 11, 'Q': 12, 'K': 13, 'A': 14}
        return values[card[0]]

    def is_flush(hand):
        return len(set([card[1] for card in hand])) == 1

    def is_straight(hand):
        values = sorted([get_value(card) for card in hand])
        return values == list(range(values[0], values[0]+5))

    def get_rank(hand):
        values = [get_value(card) for card in hand]
        value_counts = {value: values.count(value) for value in set(values)}
        sorted_values = sorted(values, reverse=True)
        flush = is_flush(hand)
        straight = is_straight(hand)
        if flush and straight and sorted_values[0] == 14:
            return 9  # Royal Flush
        elif flush and straight:
            return 8  # Straight Flush
        elif max(value_counts.values()) == 4:
            return 7  # Four of a Kind
        elif sorted(value_counts.values()) == [2, 3]:
            return 6  # Full House
        elif flush:
            return 5  # Flush
        elif straight:
            return 4  # Straight
        elif max(value_counts.values()) == 3:
            return 3  # Three of a Kind
        elif sorted(value_counts.values()) == [1, 2, 2]:
            return 2  # Two Pairs
        elif sorted(value_counts.values()) == [1, 1, 3]:
            return 1  # One Pair
        else:
            return 0  # High Card

    def get_winner(hand1, hand2):
        rank1, rank2 = get_rank(hand1), get_rank(hand2)
        if rank1 > rank2:
            return 1
        elif rank2 > rank1:
            return 2
        else:
            values1, values2 = sorted([get_value(card) for card in hand1], reverse=True), sorted([get_value(card) for card in hand2], reverse=True)
            for i in range(5):
                if values1[i] > values2[i]:
                    return 1
                elif values2[i] > values1[i]:
                    return 2
            return 0

    with open('p054_poker.txt') as f:
        hands = [line.strip().split() for line in f.readlines()]
    player1_wins = 0
    for hand in hands:
        if get_winner(hand[:5], hand[5:]) == 1:
            player1_wins += 1
    return player1_wins
# END - CODE GENERATED BY gpt3

cpu_s, wall_s = time.process_time(), time.time()
result = solution()
cpu_e, wall_e = time.process_time(), time.time()

cpu_time, wall_time = cpu_e - cpu_s, wall_e - wall_s
print(json.dumps({"solution": result, "cpu": cpu_time, "wall": wall_time}))
